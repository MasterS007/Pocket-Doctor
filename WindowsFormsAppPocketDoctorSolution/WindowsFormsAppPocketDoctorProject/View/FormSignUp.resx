<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAATCAYAAACHrr18AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABBZJREFUSEt9Vlkorl0Ufh1knscklOGCSyEkQgqXEgoZknChJHKHlEgot0oZkync
        mDKXIQpXhiJkTKbPdLf+8zyn/fZ+5//7L1Z77bXXs4Znr3d/n/b19SWQz89PitKNdqwmk0kODw9ldHRU
        enp6pLW1VVpaWqiPj4/LwcGBfHx8/Atv3GNVOhN/f38TBCN0rNhDpqamJD8/X9zd3UXTtP8VT09PKSgo
        kNnZWRaqYqm4yIWYPz8/oqkkxgPYRkZGJDQ0VCwsLMyCOzk5SWpqqpSUlEhRUZEkJyeLo6OjmQ8w4eHh
        Mjw8zJiqMaWjKCaGwAg5Oztj4L8T2tvbS319vTw8POjFqUJvb2+lrq5ObG1tzTCIkZmZKefn53p8CLBM
        rCpaW1sTHx8fgoKDg9kNdFdXV1leXibAWPnfXczNzYmzszMxwAYFBVH38/OTra0t+gJDqtVmcXFRHBwc
        6JibmysnJycM8uvXL5mYmKCPKhKrUccZdMQaGhpip5iJ4+NjycrKYkzEWllZ0Qtm4r29PR4AUFtby+qb
        mpoIyMjI0CtFEuhXV1cyPT1Nubm50YtQfmlpacS2tbUxVnV1NfcoBl8G/LX7+3sJCwvjQXFxsZ4gJiaG
        tsnJSbOOdnZ2SB2YsLS0FH9/fzk6OtJxoHFgYIDYhIQE2t7e3vhlwBYRESHPz8+iVVZWmhngiCAYFDBw
        d3enUwqJi4ujv1GSkpL0wuBzeXlJO1iEDfL4+CghISG019TUiGZjY8MNPh8FhBNsmGTYVOL393d2iTOj
        IIZKoAoEIzhDt8re19dHm52dnWjR0dHclJaW6pSicwCtrKwINFLt6+urJ1QSEBCgUw2/p6cnsmVtbc07
        xhmweXl59I+PjxdtdXWVtMJpbGyMYDgFBgbSaXd316wTDIyxaxTX3d1NH+W3vr7OM8yOsuPe4Ytut7e3
        /0w13lx06ObmJpubm3QsLCwkGI+GohqCDnp7ezl8sbGx0t/fzytQjKA73uFvbFlZGW1ozsXFhQV3dnbS
        h4kRDE8g6PH29pb5+XlZWFhgMR4eHnx5jIGhQxSFSkdh8FVJNjY2ZGZmhm84YlVVVfHq9AcEgJeXF94z
        AHh7GxsbJTExkZWnp6fz3uCrBBi1Kh0+mHBgUlJSpKGhgY8SYuLreX191TH6y4UVlDU3N/+Zut9gdIsV
        gkfh9PTULJliAYzhjVdJIerXDF9GR0eHPt2KHbO3Wul4lyMjI82GCOLl5SUVFRWytLQk19fXcnFxwSsp
        Ly8nnUZfYKOiokg3YiMu4kM3oxqrUUDL4OAgwZhG3L8x8H8JfOCLocNPouoSghwqD1adakUbdKyKBej4
        d9He3i7Z2dl84TA8GBYIfrlgy8nJka6uLtnf3yfGGNcYC7rJZJJ/AChbFfTGGe00AAAAAElFTkSuQmCC
</value>
  </data>
</root>